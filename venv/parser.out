Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    WHITESPACE

Grammar

Rule 0     S' -> P2D
Rule 1     P2D -> levellist
Rule 2     levellist -> level levellist
Rule 3     levellist -> level
Rule 4     level -> LEVEL LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER
Rule 5     Budibak -> typelist
Rule 6     typelist -> typedeclar typelist
Rule 7     typelist -> typedeclar
Rule 8     typedeclar -> TYPENAME LPAREN empty RPAREN DOUBLEPOINT typelist DELIMITER
Rule 9     typedeclar -> TYPENAME LPAREN empty RPAREN
Rule 10    typedeclar -> TYPENAME LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER
Rule 11    typedeclar -> TYPENAME LPAREN listattr RPAREN
Rule 12    simpletypedeclar -> TYPENAME LPAREN listattr RPAREN
Rule 13    listattr -> attr COMMA listattr
Rule 14    listattr -> attr
Rule 15    attr -> simpletypedeclar
Rule 16    attr -> BOOL
Rule 17    attr -> FLOAT
Rule 18    attr -> INT
Rule 19    attr -> ID
Rule 20    empty -> <empty>

Terminals, with rules where they appear

BOOL                 : 16
COMMA                : 13
DELIMITER            : 4 8 10
DOUBLEPOINT          : 4 8 10
FLOAT                : 17
ID                   : 19
INT                  : 18
LEVEL                : 4
LPAREN               : 4 8 9 10 11 12
RPAREN               : 4 8 9 10 11 12
TYPENAME             : 8 9 10 11 12
WHITESPACE           : 
error                : 

Nonterminals, with rules where they appear

Budibak              : 
P2D                  : 0
attr                 : 13 14
empty                : 8 9
level                : 2 3
levellist            : 1 2
listattr             : 4 10 11 12 13
simpletypedeclar     : 15
typedeclar           : 6 7
typelist             : 4 5 6 8 10

Parsing method: LALR

state 0

    (0) S' -> . P2D
    (1) P2D -> . levellist
    (2) levellist -> . level levellist
    (3) levellist -> . level
    (4) level -> . LEVEL LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER

    LEVEL           shift and go to state 4

    P2D                            shift and go to state 1
    levellist                      shift and go to state 2
    level                          shift and go to state 3

state 1

    (0) S' -> P2D .



state 2

    (1) P2D -> levellist .

    $end            reduce using rule 1 (P2D -> levellist .)


state 3

    (2) levellist -> level . levellist
    (3) levellist -> level .
    (2) levellist -> . level levellist
    (3) levellist -> . level
    (4) level -> . LEVEL LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER

    $end            reduce using rule 3 (levellist -> level .)
    LEVEL           shift and go to state 4

    level                          shift and go to state 3
    levellist                      shift and go to state 5

state 4

    (4) level -> LEVEL . LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER

    LPAREN          shift and go to state 6


state 5

    (2) levellist -> level levellist .

    $end            reduce using rule 2 (levellist -> level levellist .)


state 6

    (4) level -> LEVEL LPAREN . listattr RPAREN DOUBLEPOINT typelist DELIMITER
    (13) listattr -> . attr COMMA listattr
    (14) listattr -> . attr
    (15) attr -> . simpletypedeclar
    (16) attr -> . BOOL
    (17) attr -> . FLOAT
    (18) attr -> . INT
    (19) attr -> . ID
    (12) simpletypedeclar -> . TYPENAME LPAREN listattr RPAREN

    BOOL            shift and go to state 10
    FLOAT           shift and go to state 11
    INT             shift and go to state 12
    ID              shift and go to state 13
    TYPENAME        shift and go to state 14

    listattr                       shift and go to state 7
    attr                           shift and go to state 8
    simpletypedeclar               shift and go to state 9

state 7

    (4) level -> LEVEL LPAREN listattr . RPAREN DOUBLEPOINT typelist DELIMITER

    RPAREN          shift and go to state 15


state 8

    (13) listattr -> attr . COMMA listattr
    (14) listattr -> attr .

    COMMA           shift and go to state 16
    RPAREN          reduce using rule 14 (listattr -> attr .)


state 9

    (15) attr -> simpletypedeclar .

    COMMA           reduce using rule 15 (attr -> simpletypedeclar .)
    RPAREN          reduce using rule 15 (attr -> simpletypedeclar .)


state 10

    (16) attr -> BOOL .

    COMMA           reduce using rule 16 (attr -> BOOL .)
    RPAREN          reduce using rule 16 (attr -> BOOL .)


state 11

    (17) attr -> FLOAT .

    COMMA           reduce using rule 17 (attr -> FLOAT .)
    RPAREN          reduce using rule 17 (attr -> FLOAT .)


state 12

    (18) attr -> INT .

    COMMA           reduce using rule 18 (attr -> INT .)
    RPAREN          reduce using rule 18 (attr -> INT .)


state 13

    (19) attr -> ID .

    COMMA           reduce using rule 19 (attr -> ID .)
    RPAREN          reduce using rule 19 (attr -> ID .)


state 14

    (12) simpletypedeclar -> TYPENAME . LPAREN listattr RPAREN

    LPAREN          shift and go to state 17


state 15

    (4) level -> LEVEL LPAREN listattr RPAREN . DOUBLEPOINT typelist DELIMITER

    DOUBLEPOINT     shift and go to state 18


state 16

    (13) listattr -> attr COMMA . listattr
    (13) listattr -> . attr COMMA listattr
    (14) listattr -> . attr
    (15) attr -> . simpletypedeclar
    (16) attr -> . BOOL
    (17) attr -> . FLOAT
    (18) attr -> . INT
    (19) attr -> . ID
    (12) simpletypedeclar -> . TYPENAME LPAREN listattr RPAREN

    BOOL            shift and go to state 10
    FLOAT           shift and go to state 11
    INT             shift and go to state 12
    ID              shift and go to state 13
    TYPENAME        shift and go to state 14

    attr                           shift and go to state 8
    listattr                       shift and go to state 19
    simpletypedeclar               shift and go to state 9

state 17

    (12) simpletypedeclar -> TYPENAME LPAREN . listattr RPAREN
    (13) listattr -> . attr COMMA listattr
    (14) listattr -> . attr
    (15) attr -> . simpletypedeclar
    (16) attr -> . BOOL
    (17) attr -> . FLOAT
    (18) attr -> . INT
    (19) attr -> . ID
    (12) simpletypedeclar -> . TYPENAME LPAREN listattr RPAREN

    BOOL            shift and go to state 10
    FLOAT           shift and go to state 11
    INT             shift and go to state 12
    ID              shift and go to state 13
    TYPENAME        shift and go to state 14

    listattr                       shift and go to state 20
    attr                           shift and go to state 8
    simpletypedeclar               shift and go to state 9

state 18

    (4) level -> LEVEL LPAREN listattr RPAREN DOUBLEPOINT . typelist DELIMITER
    (6) typelist -> . typedeclar typelist
    (7) typelist -> . typedeclar
    (8) typedeclar -> . TYPENAME LPAREN empty RPAREN DOUBLEPOINT typelist DELIMITER
    (9) typedeclar -> . TYPENAME LPAREN empty RPAREN
    (10) typedeclar -> . TYPENAME LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER
    (11) typedeclar -> . TYPENAME LPAREN listattr RPAREN

    TYPENAME        shift and go to state 23

    typelist                       shift and go to state 21
    typedeclar                     shift and go to state 22

state 19

    (13) listattr -> attr COMMA listattr .

    RPAREN          reduce using rule 13 (listattr -> attr COMMA listattr .)


state 20

    (12) simpletypedeclar -> TYPENAME LPAREN listattr . RPAREN

    RPAREN          shift and go to state 24


state 21

    (4) level -> LEVEL LPAREN listattr RPAREN DOUBLEPOINT typelist . DELIMITER

    DELIMITER       shift and go to state 25


state 22

    (6) typelist -> typedeclar . typelist
    (7) typelist -> typedeclar .
    (6) typelist -> . typedeclar typelist
    (7) typelist -> . typedeclar
    (8) typedeclar -> . TYPENAME LPAREN empty RPAREN DOUBLEPOINT typelist DELIMITER
    (9) typedeclar -> . TYPENAME LPAREN empty RPAREN
    (10) typedeclar -> . TYPENAME LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER
    (11) typedeclar -> . TYPENAME LPAREN listattr RPAREN

    DELIMITER       reduce using rule 7 (typelist -> typedeclar .)
    TYPENAME        shift and go to state 23

    typedeclar                     shift and go to state 22
    typelist                       shift and go to state 26

state 23

    (8) typedeclar -> TYPENAME . LPAREN empty RPAREN DOUBLEPOINT typelist DELIMITER
    (9) typedeclar -> TYPENAME . LPAREN empty RPAREN
    (10) typedeclar -> TYPENAME . LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER
    (11) typedeclar -> TYPENAME . LPAREN listattr RPAREN

    LPAREN          shift and go to state 27


state 24

    (12) simpletypedeclar -> TYPENAME LPAREN listattr RPAREN .

    COMMA           reduce using rule 12 (simpletypedeclar -> TYPENAME LPAREN listattr RPAREN .)
    RPAREN          reduce using rule 12 (simpletypedeclar -> TYPENAME LPAREN listattr RPAREN .)


state 25

    (4) level -> LEVEL LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER .

    LEVEL           reduce using rule 4 (level -> LEVEL LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER .)
    $end            reduce using rule 4 (level -> LEVEL LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER .)


state 26

    (6) typelist -> typedeclar typelist .

    DELIMITER       reduce using rule 6 (typelist -> typedeclar typelist .)


state 27

    (8) typedeclar -> TYPENAME LPAREN . empty RPAREN DOUBLEPOINT typelist DELIMITER
    (9) typedeclar -> TYPENAME LPAREN . empty RPAREN
    (10) typedeclar -> TYPENAME LPAREN . listattr RPAREN DOUBLEPOINT typelist DELIMITER
    (11) typedeclar -> TYPENAME LPAREN . listattr RPAREN
    (20) empty -> .
    (13) listattr -> . attr COMMA listattr
    (14) listattr -> . attr
    (15) attr -> . simpletypedeclar
    (16) attr -> . BOOL
    (17) attr -> . FLOAT
    (18) attr -> . INT
    (19) attr -> . ID
    (12) simpletypedeclar -> . TYPENAME LPAREN listattr RPAREN

    RPAREN          reduce using rule 20 (empty -> .)
    BOOL            shift and go to state 10
    FLOAT           shift and go to state 11
    INT             shift and go to state 12
    ID              shift and go to state 13
    TYPENAME        shift and go to state 14

    empty                          shift and go to state 28
    listattr                       shift and go to state 29
    attr                           shift and go to state 8
    simpletypedeclar               shift and go to state 9

state 28

    (8) typedeclar -> TYPENAME LPAREN empty . RPAREN DOUBLEPOINT typelist DELIMITER
    (9) typedeclar -> TYPENAME LPAREN empty . RPAREN

    RPAREN          shift and go to state 30


state 29

    (10) typedeclar -> TYPENAME LPAREN listattr . RPAREN DOUBLEPOINT typelist DELIMITER
    (11) typedeclar -> TYPENAME LPAREN listattr . RPAREN

    RPAREN          shift and go to state 31


state 30

    (8) typedeclar -> TYPENAME LPAREN empty RPAREN . DOUBLEPOINT typelist DELIMITER
    (9) typedeclar -> TYPENAME LPAREN empty RPAREN .

    DOUBLEPOINT     shift and go to state 32
    TYPENAME        reduce using rule 9 (typedeclar -> TYPENAME LPAREN empty RPAREN .)
    DELIMITER       reduce using rule 9 (typedeclar -> TYPENAME LPAREN empty RPAREN .)


state 31

    (10) typedeclar -> TYPENAME LPAREN listattr RPAREN . DOUBLEPOINT typelist DELIMITER
    (11) typedeclar -> TYPENAME LPAREN listattr RPAREN .

    DOUBLEPOINT     shift and go to state 33
    TYPENAME        reduce using rule 11 (typedeclar -> TYPENAME LPAREN listattr RPAREN .)
    DELIMITER       reduce using rule 11 (typedeclar -> TYPENAME LPAREN listattr RPAREN .)


state 32

    (8) typedeclar -> TYPENAME LPAREN empty RPAREN DOUBLEPOINT . typelist DELIMITER
    (6) typelist -> . typedeclar typelist
    (7) typelist -> . typedeclar
    (8) typedeclar -> . TYPENAME LPAREN empty RPAREN DOUBLEPOINT typelist DELIMITER
    (9) typedeclar -> . TYPENAME LPAREN empty RPAREN
    (10) typedeclar -> . TYPENAME LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER
    (11) typedeclar -> . TYPENAME LPAREN listattr RPAREN

    TYPENAME        shift and go to state 23

    typelist                       shift and go to state 34
    typedeclar                     shift and go to state 22

state 33

    (10) typedeclar -> TYPENAME LPAREN listattr RPAREN DOUBLEPOINT . typelist DELIMITER
    (6) typelist -> . typedeclar typelist
    (7) typelist -> . typedeclar
    (8) typedeclar -> . TYPENAME LPAREN empty RPAREN DOUBLEPOINT typelist DELIMITER
    (9) typedeclar -> . TYPENAME LPAREN empty RPAREN
    (10) typedeclar -> . TYPENAME LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER
    (11) typedeclar -> . TYPENAME LPAREN listattr RPAREN

    TYPENAME        shift and go to state 23

    typelist                       shift and go to state 35
    typedeclar                     shift and go to state 22

state 34

    (8) typedeclar -> TYPENAME LPAREN empty RPAREN DOUBLEPOINT typelist . DELIMITER

    DELIMITER       shift and go to state 36


state 35

    (10) typedeclar -> TYPENAME LPAREN listattr RPAREN DOUBLEPOINT typelist . DELIMITER

    DELIMITER       shift and go to state 37


state 36

    (8) typedeclar -> TYPENAME LPAREN empty RPAREN DOUBLEPOINT typelist DELIMITER .

    TYPENAME        reduce using rule 8 (typedeclar -> TYPENAME LPAREN empty RPAREN DOUBLEPOINT typelist DELIMITER .)
    DELIMITER       reduce using rule 8 (typedeclar -> TYPENAME LPAREN empty RPAREN DOUBLEPOINT typelist DELIMITER .)


state 37

    (10) typedeclar -> TYPENAME LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER .

    TYPENAME        reduce using rule 10 (typedeclar -> TYPENAME LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER .)
    DELIMITER       reduce using rule 10 (typedeclar -> TYPENAME LPAREN listattr RPAREN DOUBLEPOINT typelist DELIMITER .)

